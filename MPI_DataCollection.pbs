#!/bin/bash
#PBS -N DataCollection_MPI_Implementation
#PBS -o ./MPIDataOutput.out
#PBS -e ./MPIDataErrors.err
#PBS -q short_cpuQ
#PBS -l walltime=1:00:00
#PBS -l nodes=1:ppn=32

# Load the necessary modules
module load gcc91 || exit 1
module load mpich-3.2.1--gcc-9.1.0 || exit 1

# Change to the working directory
cd /home/YourUsername || exit 1

# Compile with optimization
mpic++ -std=c++11 -o DataGenerator_2 MatrixTransp_CLUSTER_MPI_Deliverable_2.cpp || exit 1

# Define the number of processes and the matrix sizes (2^N)
PROCESSORS=(1 2 4 8 16 32)
VALUES=(16 32 64 128 256 512 1024 2048 4096)

# Number of times to repeat each measurement
NUM_TRIALS=100

# Run once per (p, n) pair, and let the code itself handle NUM_TRIALS runs
for p in "${PROCESSORS[@]}"; do
    for n in "${VALUES[@]}"; do
        # Pass $NUM_TRIALS as an extra argument so the program can internally
        # loop over that many runs, rather than calling mpirun 100 separate times.
        mpirun -np "$p" ./DataGenerator_2 "$n" "$NUM_TRIALS"
    done
done
